@model EnglishTest.Models.GameIndexViewModel

@{
    ViewBag.Title = "Game";
    EnglishTest.Models.GameIndexViewModel test = new EnglishTest.Models.GameIndexViewModel();
    test = Model;
    int x = 0;
}

<h2>Game</h2>


@*@foreach(EnglishTest.Models.GameViewModel verbe in Model.gameViewModels)
    {
        <p>@verbe.verbe</p>
    }*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <p>@Model.CurrentItem.verbe.baseVerbale</p>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentItem.reponseParticipePasser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentItem.reponseParticipePasser, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentItem.reponsePreterit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentItem.reponsePreterit, "", new { @class = "text-danger" })
            </div>
        </div>
        <button type="submit">Suivant</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
